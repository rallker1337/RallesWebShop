@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
	string activeController = "";
	if (ViewContext.RouteData.Values["page"] != null)
	{
		activeController = ViewContext.RouteData.Values["page"].ToString();
	}

}

<ul class="navbar-nav ml-auto">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link@(activeController == "/Account/Manage/Index" ? " active" : "")" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@*@User.Identity.Name*@PROFILE</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button class="bg-transparent no-border" type="submit"><a class="nav-link">LOGOUT</a></button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link@(activeController == "/Account/Register" ? " active" : "")" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-pencil-square add-icon-2"></i></a>
    </li>
    <li class="nav-item">
        <a class="nav-link@(activeController == "/Account/Login" ? " active" : "")" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right add-icon-3"></i></a>
    </li>
}
</ul>
